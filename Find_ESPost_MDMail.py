import fitz
import pytesseract as tess
import os
import time
import gspread
from google.oauth2.service_account import Credentials

# C·∫•u h√¨nh Tesseract
tess.pytesseract.tesseract_cmd = r"D:\Project\Tesseract-OCR\tesseract.exe"


def scan_pdf_for_text(pdf_path, search_texts=["easypost", "USPS MEDIA MAIL"]):
    """
    Qu√©t PDF v√† t√¨m ki·∫øm c√°c text c·ª• th·ªÉ
    """
    try:
        print(f"ƒêang x·ª≠ l√Ω: {os.path.basename(pdf_path)}")

        # M·ªü PDF
        pdf_document = fitz.open(pdf_path)
        all_text = ""

        # X·ª≠ l√Ω t·ª´ng trang
        for page_num in range(len(pdf_document)):
            page = pdf_document[page_num]

            # Chuy·ªÉn trang th√†nh h√¨nh ·∫£nh
            pix = page.get_pixmap()

            # T·∫°o t√™n file t·∫°m cho h√¨nh ·∫£nh
            temp_image_path = f"temp_page_{page_num}.png"
            pix.save(temp_image_path)

            try:
                # OCR nh·∫≠n d·∫°ng text
                text = tess.image_to_string(temp_image_path)
                all_text += text + " "

                # X√≥a file t·∫°m
                os.remove(temp_image_path)

            except Exception as e:
                print(f"L·ªói OCR trang {page_num}: {e}")
                # X√≥a file t·∫°m n·∫øu c√≥ l·ªói
                if os.path.exists(temp_image_path):
                    os.remove(temp_image_path)
                continue

        pdf_document.close()

        # Ki·ªÉm tra c√≥ ch·ª©a text n√†o c·∫ßn t√¨m kh√¥ng
        found_texts = []
        for search_text in search_texts:
            if search_text.lower() in all_text.lower():
                found_texts.append(search_text)

        if found_texts:
            return True, all_text, found_texts
        else:
            return False, all_text, []

    except Exception as e:
        print(f"L·ªói x·ª≠ l√Ω file {pdf_path}: {e}")
        return False, "", []


def setup_google_sheets(json_keyfile_path, sheet_url):
    """
    K·∫øt n·ªëi v·ªõi Google Sheets
    """
    try:
        # ƒê·ªãnh nghƒ©a scope
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]

        # X√°c th·ª±c
        creds = Credentials.from_service_account_file(json_keyfile_path, scopes=scope)
        client = gspread.authorize(creds)

        # M·ªü sheet
        sheet = client.open_by_url(sheet_url).sheet1  # Ho·∫∑c .worksheet('Sheet1')

        return sheet
    except Exception as e:
        print(f"L·ªói k·∫øt n·ªëi Google Sheets: {e}")
        return None


def update_google_sheets_batch(sheet, results_dict):
    """
    C·∫≠p nh·∫≠t Google Sheets theo batch ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t
    """
    try:
        # L·∫•y t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ c·ªôt B (Order Code)
        order_codes = sheet.col_values(2)  # C·ªôt B = index 2

        # Chu·∫©n b·ªã d·ªØ li·ªáu batch update
        batch_updates = []
        updated_count = 0

        # Duy·ªát qua t·ª´ng order code (b·∫Øt ƒë·∫ßu t·ª´ h√†ng 2 - b·ªè header)
        for row_index, order_code in enumerate(order_codes[1:], start=2):
            if order_code and order_code.strip() in results_dict:
                cell_address = f'L{row_index}'
                batch_updates.append({
                    'range': cell_address,
                    'values': [[results_dict[order_code.strip()]]]
                })
                updated_count += 1
                print(f"‚úì Chu·∫©n b·ªã c·∫≠p nh·∫≠t {order_code}: {results_dict[order_code.strip()]}")

        # Th·ª±c hi·ªán batch update
        if batch_updates:
            sheet.batch_update(batch_updates)
            print(f"\n‚úÖ ƒê√£ c·∫≠p nh·∫≠t {updated_count} d√≤ng trong Google Sheets!")
        else:
            print("\n‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu n√†o c·∫ßn c·∫≠p nh·∫≠t")

        return True

    except Exception as e:
        print(f"L·ªói c·∫≠p nh·∫≠t Google Sheets: {e}")
        return False


def get_order_code_from_filename(filename):
    """
    L·∫•y order code t·ª´ t√™n file PDF (b·ªè extension .pdf)
    """
    return os.path.splitext(filename)[0]



def scan_folder_for_pdfs(folder_path, search_texts=["easypost", "USPS MEDIA MAIL"], sheet=None):
    """
    Qu√©t t·∫•t c·∫£ PDF trong folder v√† t√¨m c√°c text
    C·∫≠p nh·∫≠t Google Sheets m·ªói 10 file t√¨m th·∫•y
    """
    found_files = []
    results_dict = {}  # Dictionary ƒë·ªÉ l∆∞u k·∫øt qu·∫£: {order_code: keywords_found}
    batch_results = {}  # Dictionary cho batch hi·ªán t·∫°i
    found_count = 0

    # Ki·ªÉm tra folder c√≥ t·ªìn t·∫°i kh√¥ng
    if not os.path.exists(folder_path):
        print(f"Folder kh√¥ng t·ªìn t·∫°i: {folder_path}")
        return found_files, results_dict

    # L·∫•y danh s√°ch t·∫•t c·∫£ file PDF
    pdf_files = []
    for file in os.listdir(folder_path):
        if file.lower().endswith('.pdf'):
            pdf_files.append(os.path.join(folder_path, file))

    print(f"T√¨m th·∫•y {len(pdf_files)} file PDF trong folder")
    print("-" * 50)

    # X·ª≠ l√Ω t·ª´ng file PDF
    for i, pdf_path in enumerate(pdf_files, 1):
        print(f"[{i}/{len(pdf_files)}] ", end="")

        found, text, found_texts = scan_pdf_for_text(pdf_path, search_texts)

        # L·∫•y order code t·ª´ t√™n file
        order_code = get_order_code_from_filename(os.path.basename(pdf_path))

        if found:
            keywords_str = ", ".join(found_texts)
            found_files.append({
                'file_path': pdf_path,
                'file_name': os.path.basename(pdf_path),
                'order_code': order_code,
                'text_content': text,
                'found_keywords': found_texts
            })
            results_dict[order_code] = keywords_str
            batch_results[order_code] = keywords_str
            found_count += 1
            print(f"‚úì FOUND: {keywords_str}")

            # C·∫≠p nh·∫≠t Google Sheets m·ªói 10 file t√¨m th·∫•y
            if found_count % 10 == 0 and sheet:
                print(f"\nüîÑ C·∫≠p nh·∫≠t Google Sheets - Batch {found_count // 10}...")
                if update_google_sheets_batch(sheet, batch_results):
                    print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t {len(batch_results)} m·ª•c v√†o Google Sheets")
                    batch_results = {}  # Reset batch
                else:
                    print("‚ùå L·ªói c·∫≠p nh·∫≠t batch")
                print("-" * 50)
        else:
            print("‚úó Not found")

        # Th√™m delay nh·ªè ƒë·ªÉ tr√°nh qu√° t·∫£i
        time.sleep(0.1)

    # C·∫≠p nh·∫≠t batch cu·ªëi c√πng (n·∫øu c√≤n d∆∞)
    if batch_results and sheet:
        print(f"\nüîÑ C·∫≠p nh·∫≠t batch cu·ªëi c√πng ({len(batch_results)} m·ª•c)...")
        if update_google_sheets_batch(sheet, batch_results):
            print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t batch cu·ªëi th√†nh c√¥ng")
        else:
            print("‚ùå L·ªói c·∫≠p nh·∫≠t batch cu·ªëi")

    return found_files, results_dict


# MAIN EXECUTION
if __name__ == "__main__":
    folder_path = r"D:\FILE\New folder"

    # GOOGLE SHEETS CONFIG - THAY ƒê·ªîI NH·ªÆNG TH√îNG TIN N√ÄY
    json_keyfile_path = r"D:\Project\decent-trail-451507-d7-d59973874d84.json"  # File JSON credentials
    sheet_url = "https://docs.google.com/spreadsheets/d/1_A6QdeYj_HCT23Y1yFMCHxBE6wMoYth5QL__ZZ_AuYU/edit"  # URL Google Sheet

    search_texts = ["easypost", "USPS MEDIA MAIL"]

    print(f"B·∫Øt ƒë·∫ßu qu√©t folder: {folder_path}")
    print(f"Google Sheet URL: {sheet_url}")
    print(f"T√¨m ki·∫øm t·ª´ kh√≥a: {search_texts}")
    print("=" * 60)

    # K·∫øt n·ªëi Google Sheets
    print("ƒêang k·∫øt n·ªëi Google Sheets...")
    sheet = setup_google_sheets(json_keyfile_path, sheet_url)

    if not sheet:
        print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi Google Sheets. Ki·ªÉm tra l·∫°i c·∫•u h√¨nh!")
        exit()

    print("‚úÖ K·∫øt n·ªëi Google Sheets th√†nh c√¥ng!")

    # B·∫Øt ƒë·∫ßu qu√©t PDF
    start_time = time.time()
    results, results_dict = scan_folder_for_pdfs(folder_path, search_texts, sheet)
    end_time = time.time()

    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    print("\n" + "=" * 60)
    print("K·∫æT QU·∫¢ T·ªîNG H·ª¢P:")
    print(f"Th·ªùi gian x·ª≠ l√Ω: {end_time - start_time:.2f} gi√¢y")
    print(f"S·ªë file ch·ª©a t·ª´ kh√≥a: {len(results)}")

    if results:
        print("\nDanh s√°ch file ch·ª©a t·ª´ kh√≥a:")
        for i, result in enumerate(results, 1):
            print(f"{i}. Order Code: {result['order_code']}")
            print(f"   File: {result['file_name']}")
            print(f"   T·ª´ kh√≥a t√¨m th·∫•y: {', '.join(result['found_keywords'])}")
            print()

        print("‚úÖ T·∫•t c·∫£ k·∫øt qu·∫£ ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√†o Google Sheets!")

    else:
        print(f"\nKh√¥ng t√¨m th·∫•y file n√†o ch·ª©a t·ª´ kh√≥a: {search_texts}")

    print("\nHo√†n th√†nh!")